// <auto-generated />
using System;
using APIServicosResidencia.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIServicosResidencia.Migrations
{
    [DbContext(typeof(ConnectionDb))]
    [Migration("20231005151047_relacionamentotabela")]
    partial class relacionamentotabela
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("APIServicosResidencia.Modelo.Localizacao", b =>
                {
                    b.Property<int>("LocalizacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocalizacaoId"), 1L, 1);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("NomeClienteId")
                        .HasColumnType("int");

                    b.HasKey("LocalizacaoId");

                    b.ToTable("LocalizacaCliente");
                });

            modelBuilder.Entity("APIServicosResidencia.Modelo.NomeCliente", b =>
                {
                    b.Property<int>("NomeClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NomeClienteId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("LocalizacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("NumeroCelular")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("NomeClienteId");

                    b.HasIndex("LocalizacaoId");

                    b.ToTable("NomeClientes");
                });

            modelBuilder.Entity("APIServicosResidencia.Modelo.NomeServico", b =>
                {
                    b.Property<int>("NomeServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NomeServicoId"), 1L, 1);

                    b.Property<int>("NomeClienteId")
                        .HasColumnType("int");

                    b.Property<string>("NomeServicoRes")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("NomeServicoId");

                    b.HasIndex("NomeClienteId");

                    b.ToTable("NomeServicos");
                });

            modelBuilder.Entity("APIServicosResidencia.Modelo.NomeCliente", b =>
                {
                    b.HasOne("APIServicosResidencia.Modelo.Localizacao", null)
                        .WithMany("NomeClientes")
                        .HasForeignKey("LocalizacaoId");
                });

            modelBuilder.Entity("APIServicosResidencia.Modelo.NomeServico", b =>
                {
                    b.HasOne("APIServicosResidencia.Modelo.NomeCliente", "NomeClientes")
                        .WithMany("Servicos")
                        .HasForeignKey("NomeClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NomeClientes");
                });

            modelBuilder.Entity("APIServicosResidencia.Modelo.Localizacao", b =>
                {
                    b.Navigation("NomeClientes");
                });

            modelBuilder.Entity("APIServicosResidencia.Modelo.NomeCliente", b =>
                {
                    b.Navigation("Servicos");
                });
#pragma warning restore 612, 618
        }
    }
}
